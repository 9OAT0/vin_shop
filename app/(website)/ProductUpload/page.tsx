"use client";

import React, { useState } from "react";
import axios from "axios";
import { useForm } from "react-hook-form";
import Image from "next/image";
import { useRouter } from 'next/navigation';

interface ProductFormData {
  name: string;
  price: number;
  size: string;
  description: string;
  pictures: File[];
}

const ProductUpload: React.FC = () => {
  const { register, handleSubmit, reset, setValue, getValues } = useForm<ProductFormData>();
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState<string | null>(null);
  const [previewImages, setPreviewImages] = useState<string[]>([]); // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ Preview
  const router = useRouter();

  // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï `pictures` ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Array ‡∏ó‡∏µ‡πà `react-hook-form` ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à
  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (files) {
      const existingFiles = getValues("pictures") || []; // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
      const newFiles = Array.from(files);

      // ‚úÖ ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5 ‡∏£‡∏π‡∏õ
      if (existingFiles.length + newFiles.length > 5) {
        setMessage("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5 ‡∏£‡∏π‡∏õ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!");
        return;
      }

      const updatedFiles = [...existingFiles, ...newFiles]; // ‚úÖ ‡∏£‡∏ß‡∏°‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
      setValue("pictures", updatedFiles);

      // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Preview
      const previewArray = updatedFiles.map((file) => URL.createObjectURL(file));
      setPreviewImages(previewArray);
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
  const handleRemoveImage = (index: number) => {
    const updatedFiles = getValues("pictures").filter((_, i) => i !== index); // ‚úÖ ‡πÄ‡∏≠‡∏≤‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å
    setValue("pictures", updatedFiles);

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Preview
    const previewArray = updatedFiles.map((file) => URL.createObjectURL(file));
    setPreviewImages(previewArray);
  };

  const onSubmit = async (data: ProductFormData) => {
    setLoading(true);
    setMessage(null);

    try {
      const formData = new FormData();
      formData.append("name", data.name);
      formData.append("price", data.price.toString());
      formData.append("size", data.size);
      formData.append("description", data.description);

      // ‚úÖ ‡∏™‡πà‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API
      data.pictures.forEach((file) => {
        formData.append("pictures", file);
      });

      const token = localStorage.getItem("token");

      await axios.post("/api/Product", formData, {
        headers: {
          "Content-Type": "multipart/form-data",
          Authorization: `Bearer ${token}`,
        },
      });

      setMessage("‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      router.push('/admin');
      setPreviewImages([]); // ‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      reset();
    } catch (error) {
      console.error("‚ùå Error uploading product:", error);
      setMessage("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 p-6 flex justify-center items-center text-black">
      <div className="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
        <h1 className="text-2xl font-bold text-center mb-6">üì¶ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà</h1>

        {message && (
          <div
            className={`p-3 mb-4 rounded ${
              message.includes("‚úÖ") ? "bg-green-200 text-green-700" : "bg-red-200 text-red-700"
            }`}
          >
            {message}
          </div>
        )}

        <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
          {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
          <div>
            <label className="block font-semibold">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</label>
            <input
              type="text"
              {...register("name", { required: true })}
              className="w-full p-2 border border-gray-300 rounded"
              required
            />
          </div>

          {/* ‡∏£‡∏≤‡∏Ñ‡∏≤ */}
          <div>
            <label className="block font-semibold">‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ø)</label>
            <input
              type="number"
              {...register("price", { required: true })}
              className="w-full p-2 border border-gray-300 rounded"
              required
            />
          </div>

          {/* ‡∏Ç‡∏ô‡∏≤‡∏î */}
          <div>
            <label className="block font-semibold">‡∏Ç‡∏ô‡∏≤‡∏î</label>
            <select {...register("size", { required: true })} className="w-full p-2 border border-gray-300 rounded">
              <option value="S">S</option>
              <option value="M">M</option>
              <option value="L">L</option>
              <option value="XL">XL</option>
            </select>
          </div>

          {/* ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ */}
          <div>
            <label className="block font-semibold">‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</label>
            <textarea
              {...register("description", { required: true })}
              className="w-full p-2 border border-gray-300 rounded"
              required
            />
          </div>

          {/* ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ */}
          <div>
            <label className="block font-semibold">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5 ‡∏£‡∏π‡∏õ)</label>
            <input
              type="file"
              className="w-full p-2 border border-gray-300 rounded"
              accept="image/png, image/jpeg, image/jpg"
              multiple
              required
              onChange={handleFileChange} // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            />
            {getValues("pictures")?.length > 0 && (
              <p className="text-sm text-gray-600 mt-1">üì∏ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡πâ‡∏ß {getValues("pictures").length} ‡∏£‡∏π‡∏õ</p>
            )}
          </div>

          {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö) */}
          {previewImages.length > 0 && (
            <div className="flex gap-2 mt-2 flex-wrap">
              {previewImages.map((src, index) => (
                <div key={index} className="relative">
                  <Image src={src} alt={`preview-${index}`} width={300} height={200} className="w-16 h-16 object-cover rounded" />
                  <button
                    type="button"
                    onClick={() => handleRemoveImage(index)}
                    className="absolute top-0 right-0 bg-red-600 text-white text-xs px-1 rounded-full hover:bg-red-800"
                  >
                    üóë
                  </button>
                </div>
              ))}
            </div>
          )}

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */}
          <button
            type="submit"
            className="w-full p-2 bg-blue-500 text-white font-semibold rounded hover:bg-blue-600 disabled:bg-gray-400"
            disabled={loading}
          >
            {loading ? "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î..." : "üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"}
          </button>
        </form>
      </div>
    </div>
  );
};

export default ProductUpload;
